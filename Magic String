'''Eva has a string S containing lowercase English letters. She wants to transform this string into 
a Magic String, where all the characters in the string are the same. To do so, she can replace 
any letter in the string with another letter present in that string. 6 
Your task is to help Eva find and return an integer value, representing the minimum number 
of steps required to form a Magic String. Return 0, if S is already a Magic String.'''

def min_steps_to_magic_string(S):
    # Count the frequency of each character in the string
    char_count = {}
    for char in S:
        if char in char_count:
            char_count[char] += 1
        else:
            char_count[char] = 1
    
    # Find the maximum frequency
    max_freq = max(char_count.values())
    
    # Calculate the number of replacements required
    replacements = len(S) - max_freq
    
    return replacements

# Sample input
input_string = "aaabbbccdddd"
# Expected output: 8
print(min_steps_to_magic_string(input_string))
